version: 2.1

# -------------------------
#       PARAMETERS
# -------------------------
parameters:
  deploy-example:
    type: boolean
    default: false

# -------------------------
#          ORBS
# -------------------------
orbs:
  slack: circleci/slack@4.4.4
  android: circleci/android@2.0.3
  aws-s3: circleci/aws-s3@3.0.0

# -------------------------
#        EXECUTORS
# -------------------------
executors:
  js_compatible:
    docker:
      - image: cimg/node:18.4.0
    working_directory: ~/project
  ios_compatible:
    macos:
      xcode: 14.0.0
    working_directory: ~/project/example/ios/App
    shell: /bin/bash --login -o pipefail
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
  android_compatible:
    machine: 
      image: android:2022.04.1
    resource_class: large
    working_directory: ~/project/example/android

# -------------------------
#        REFERENCES
# -------------------------
references:
  is_main: &is_main
    matches:
      pattern: '^main$'
      value: << pipeline.git.branch >>

# -------------------------
#          COMMANDS
# -------------------------
commands:
  attach_project:
    steps:
      - attach_workspace:
          at: ~/project
  setup_gems:
    description: 'Install gem dependencies'
    steps:
      - restore_cache:
          name: Restore gem cache
          key: 2-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install gem dependencies
          command: bundle check || bundle install --deployment --path vendor/bundle
      - save_cache:
          name: Save gem cache
          key: 2-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

# -------------------------
#          JOBS
# -------------------------
jobs:
  build-package-and-example:
    executor: js_compatible
    environment:
      NODE_OPTIONS: --openssl-legacy-provider --no-experimental-fetch
    steps:
      - checkout
      - restore_cache:
          keys:
            - 1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: |
            npm install
      - save_cache:
          key: 1-dependencies-{{ checksum "package.json" }}
          paths: node_modules
      - run:
          name: Build package
          command: |
            npm run build
      - restore_cache:
          keys:
            - 1-dependencies-example-{{ checksum "example/package.json" }}
      - run:
          name: Install example dependencies
          command: |
            npm --prefix ./example install
      - save_cache:
          key: 1-dependencies-example-{{ checksum "example/package.json" }}
          paths: example/node_modules
      - run:
          name: Build example
          command: |
            cd ./example
            ./scripts/replace-placeholders.sh ${EX_APPCUES_ACCOUNT_ID} ${EX_APPCUES_APPLICATION_ID}
            npm run build
            npx cap sync
      - persist_to_workspace:
          root: .
          paths: .

  validate-ios:
    executor: ios_compatible
    steps:
      - attach_project
      - setup_gems
      - run:
          name: Run fastlane validate code
          command: bundle exec fastlane compile_example
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: team-mobile-bots

  validate-android:
    executor: android_compatible
    steps:
      - attach_project
      - setup_gems
      - run:
          name: Run fastlane validate_code
          command: bundle exec fastlane compile_example
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: team-mobile-bots

  deploy-ios-example:
    executor: ios_compatible
    steps:
      - attach_project
      - setup_gems
      - run:
          name: Run example build
          command: bundle exec fastlane deploy_example
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: team-mobile-bots
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš€ Ionic iOS Sample App Deployed to TestFlight ðŸ“²",
                    "emoji": true
                  }
                }
              ],
              "attachments": [
                {
                  "color": "#5C5CFF",
                  "blocks": [
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View Job",
                            "emoji": true
                          },
                          "url": "$CIRCLE_BUILD_URL"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View in TestFlight",
                            "emoji": true
                          },
                          "url": "https://testflight.apple.com/v1/app/1641347066"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          channel: team-mobile-bots

  deploy-android-example:
    executor: android_compatible
    steps:
      - attach_project
      - setup_gems
      - aws-s3/copy:
          from: 's3://appcues-mobile-certs/appcues.keystore'
          to: './'
      - run:
          name: Run example build
          command: bundle exec fastlane deploy_example
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: team-mobile-bots
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš€ Ionic Android Sample App Deployed to Google Play :android:",
                    "emoji": true
                  }
                }
              ],
              "attachments": [
                {
                  "color": "#5C5CFF",
                  "blocks": [
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View Job",
                            "emoji": true
                          },
                          "url": "$CIRCLE_BUILD_URL"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View on Google Play",
                            "emoji": true
                          },
                          "url": "https://play.google.com/store/apps/details?id=com.appcues.examples.ionic"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          channel: team-mobile-bots

# -------------------------
#        WORKFLOWS
# -------------------------
workflows:
  build-and-test:
    when:
      not: << pipeline.parameters.deploy-example >>
    jobs:
      - build-package-and-example
      - validate-android:
          requires:
            - build-package-and-example
          context:
            - Appcues
      - validate-ios:
          requires:
            - build-package-and-example
          context:
            - Appcues

  build-and-deploy:
    when: << pipeline.parameters.deploy-example >>
    jobs:
      - build-package-and-example
      - deploy-android-example:
          requires:
            - build-package-and-example
          context:
            - Appcues
      - deploy-ios-example:
          requires:
            - build-package-and-example
          context:
            - Appcues
